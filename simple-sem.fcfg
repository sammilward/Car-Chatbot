% start S
############################
# Grammar Rules
#############################

S[SEM = <?subj(?vp)>] -> NP[NUM=?n,SEM=?subj] VP[NUM=?n,SEM=?vp]

NP[NUM=?n,SEM=<?det(?nom)> ] -> Det[NUM=?n,SEM=?det]  Nom[NUM=?n,SEM=?nom]
NP[LOC=?l,NUM=?n,SEM=?np] -> PropN[LOC=?l,NUM=?n,SEM=?np]

Nom[NUM=?n,SEM=?nom] -> N[NUM=?n,SEM=?nom]

VP[NUM=?n,SEM=?v] -> IV[NUM=?n,SEM=?v]
VP[NUM=?n,SEM=<?v(?obj)>] -> TV[NUM=?n,SEM=?v] NP[SEM=?obj]
VP[NUM=?n,SEM=<?v(?obj,?pp)>] -> DTV[NUM=?n,SEM=?v] NP[SEM=?obj] PP[+TO,SEM=?pp]

PP[+TO, SEM=?np] -> P[+TO] NP[SEM=?np]

#############################
# Lexical Rules
#############################

PropN[-LOC,NUM=sg,SEM=<\P.P(car1)>] -> 'car1'
PropN[-LOC,NUM=sg,SEM=<\P.P(car2)>] -> 'car2'
PropN[-LOC,NUM=sg,SEM=<\P.P(car3)>] -> 'car3'
PropN[-LOC,NUM=sg,SEM=<\P.P(car4)>] -> 'car4'
PropN[-LOC,NUM=sg,SEM=<\P.P(car5)>] -> 'car5'
PropN[-LOC,NUM=sg,SEM=<\P.P(car6)>] -> 'car6'
PropN[-LOC,NUM=sg,SEM=<\P.P(car7)>] -> 'car7'
PropN[-LOC,NUM=sg,SEM=<\P.P(car8)>] -> 'car8'
PropN[-LOC,NUM=sg,SEM=<\P.P(car9)>] -> 'car9'
PropN[-LOC,NUM=sg,SEM=<\P.P(car10)>] -> 'car10'


Det[NUM=sg,SEM=<\P Q.all x.(P(x) -> Q(x))>] -> 'every'
Det[NUM=pl,SEM=<\P Q.all x.(P(x) -> Q(x))>] -> 'all'
Det[NUM=sg,SEM=<\P Q.exists x.(P(x) & Q(x))>] -> 'a'
Det[NUM=sg,SEM=<\P Q.exists x.(P(x) & Q(x))>] -> 'an'

N[NUM=sg,SEM=<\x.broken_engine(x)>] -> 'broken_engine'
N[NUM=sg,SEM=<\x.flat_battery(x)>] -> 'flat_battery'
N[NUM=sg,SEM=<\x.smashed_windshield(x)>] -> 'smashed_windshield'
N[NUM=sg,SEM=<\x.poor_suspension(x)>] -> 'poor_suspension'
N[NUM=sg,SEM=<\x.flickering_headlight(x)>] -> 'flickering_headlight'
N[NUM=sg,SEM=<\x.bad_handling(x)>] -> 'bad_handling'
N[NUM=sg,SEM=<\x.slow_acceleration(x)>] -> 'slow_acceleration'
N[NUM=sg,SEM=<\x.broken_fog_light(x)>] -> 'broken_fog_light'

TV[NUM=sg,SEM=<\X x.X(\y.be_in(x,y))>,TNS=pres] -> 'is_in'
TV[NUM=pl,SEM=<\X x.X(\y.be_in(x,y))>,TNS=pres] -> 'are_in'

P[+to] -> 'to'